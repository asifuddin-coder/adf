{
	"name": "DF_empload",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_empcsv01",
						"type": "DatasetReference"
					},
					"name": "empload"
				},
				{
					"dataset": {
						"referenceName": "emphistory_db",
						"type": "DatasetReference"
					},
					"name": "historydataload"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_output",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Currentdate"
				},
				{
					"name": "splitbydep"
				},
				{
					"name": "dateotherdept"
				},
				{
					"name": "unionemp"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empload",
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> historydataload",
				"splitbydep@deptcondition derive(todate = currentDate()) ~> Currentdate",
				"unionemp split(DEPARTMENT_ID=='50',",
				"     DEPARTMENT_ID!='50',",
				"     disjoint: true) ~> splitbydep@(deptcondition, otherdept)",
				"splitbydep@otherdept derive(updateddate = currentDate()) ~> dateotherdept",
				"empload, historydataload union(byName: true)~> unionemp",
				"Currentdate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Dept10data.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"dateotherdept sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['otherdept'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}